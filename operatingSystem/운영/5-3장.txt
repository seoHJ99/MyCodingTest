multilevel queue
cpu에 대한 여러 대기줄
레디큐를 여러개로 분할
1순위 시스템 프로세스
2순위 상호작용 프로세스
3순위 상호작용 프로세스( 약간 떨어짐)
4순위 대기 시간만 길어지는 프로세스
순으로 대기줄의 순위가 정해짐.
  foreground : 인터엑티브한 잡. 라운드 로빈
  backgroud : 상호작영이 없이 cpu만 오래쓰는 잡. fcfs
각 큐는 독립적인 스케줄링 알고리즘을 가짐
큐에 대한 스켈링이 필요.
각 대기줄별로 cpu 시간을 배당해서 starvation을 피함. 80:20식으로 차등적으로 배분.

멀티레밸 피드백 큐
대기줄이 여러개지만 조건에 따라 프로세스가 대기줄을 바꿀수 있는 큐
에이징을 이와 같은 방식으로 구현 가능.
일반적으로 우선순위가 가장 높은 큐로 넣은 다음 시간이 흐르면 퀀텀 시간이 더 긴 아래 큐로 이동, 마지막은 fcfs로 처리해서 모두처리. cpu사용시간이 짧은 프로세스에게 우선순위를 부여하는 방식.

멀티 프로세서 스케줄링
cpu가 여러개일때 스케쥴링.
homogeneous processor인 경우
  어떤 일을 특정 cpu가 실행해야하는 경우.
  queue에 한줄로 세워서 각 프로세서가 알아서 꺼내가는 방식.
load sharing
  일부 프로세서에 job이 몰리지 않도록 부하를 적절히 공유하는 메커니즘
  별개의 큐를 두는 방법 vs 공동 큐를 사용하는 방법
symmetric multiprocessing(SMP)
  각 프로세서가 각자 알아서 스케줄링 결정
asymmetric multiprocessing
  하나의 프로세서가 시스템 데이터의 접근과 공유를 책임지고 나머진 프로세서는 거기에 따름. 대장과 부하들.

리얼 타임 스케줄링
hard real-time systems
  정해진 시간 안에 반드시 일이 끝나야 함.
soft real-time computing
  일반 프로ㅔㅅ스에 비해  높은 priority를 갖도록 해야함.

쓰레드 스케쥴링
로컬 스케줄링
  유저레벨 스레드(프로세스에서 스레드를 관리) 의 경우 사용자 수준의 스레드 라이브러리에 의해 어떤 스레드를 스케줄할지 결정
글로벌 스케줄링
  커널 레벩 스레드의 경우 일반 프로세스와 마찬가지로 커널의 단기 스케줄러가 어떤 스레드를 스케줄할지 결정

알고리즘 evaluation
알고리즘 성능 측정
queueing models : 확률 분포로 주어지는 arrival rate 와 service rate드을 통해 각종 퍼포먼스 인덱스값을 계산.
implementaion(구현) & measurement(성능 측정) : 실제 시스템에 알고리즘을 구현하여 실제 작업(workload)에 대해서 성능을 측정 비교
simulation(모의 실험) : 알고리즘을 모의 프로그램으로 작성 후 trace를 입력으로 하여 결과 비교
