Transfer for SFTP(Secure Shell File Transfer Protocol)
보안 셸 파일 전송 프로토콜. 인터넷을 통해 데이터를 안전하게 전송시 사용.
SSH 사용
    - FTP / FTPS 프로토콜 지원
    - SFTP 키페어를 만들어 키 간 교환을 통해 인증
    - 완전 관리형 서비스.
    - Route 53 을 이용한 라우팅 가능

주요기능
확장 가능. 탄력적. 완전 관리. 보안. 기본 aws 기능과 통합. 비용 효율. 편의성

온프레미스는 라이센스 비용, 하드웨어 비용등이 추가 지출
클라우드에서 사용하면 s3 에 저장됨.

openSSh, WinSCP, Cyberduck 같은 오픈소스 소프트웨어에서 사용 가능

AWS Transfer for SFTP 아키텍처
1. 호스트 이름 관리
    1. 서버, 사용자 id 및 s3 액세스 생성
    2. 기존 SFTP 서버를 AWS Transfer for SFTP 에 연결
2. 사용자 관리
    사용자를 생성하고 사용자에 대한 퍼블릭 키를 SFTP 서버에 배치
    또는 LDAP 등 을 Amazon API Gateway를 이용하여 Transfer for SFTP 와 연결
3. 클라우드 기반 솔루션
    s3버킷을 선택하여 iam 할당.
4. virtual private cloud
    퍼블릭 ip 주소를 사용하지 않고 vpc 엔드포인트를 사용하여 vpc 에 연결 가능


순서
1. 호스트 이름 매핑. 호스트와 서버 엔드포인트 연결
2. s3 버킷 선택. s3 접근 권한 IAM 역할 생성
3. 사용자 설정. IAM 역할과 매핑하여 파일작업 가능하도록 허가

실습
1. s3 버킷 생성
2. 인스턴스 실행. 파일을 주고 받을 인스턴스 2개
3. 리소스 기반 IAM 정책과 IAM 역할 생성
    - create role -> aws 서비스 -> Transfer -> create policy -> json -> s3 에 대한 읽기 쓰기 허락
       -> policy 만들기 -> role만들기 ->  다시 transfer -> 만든 정책 추가 -> 태깅(썬택)
       -> 역할 이름 정하고 만들기
4. AWS Transfer for SFTP 선택. create server
5. vpc또는 퍼블릭 네트워크 선택
6. 사용자 지정 호스트 이름 선택 가능. 사용자 지정은 이 사용자가 api 게이트웨이를 호출할때 쓸 api 게이트웨이 엔드포인트. aws 외부에서 사용ㅅ. 
7. sftp 말고 다른 프로토콜도 선택하면 반드시 사용자 정의.
8. api 게이트웨이를 사용자 지정하여 각 요청을 인증할수 있음. 7과 같은 말.
9. logging role 에서 cloudWatch 를 활성화 가능
10. 서버 시작
11. 서버 속성에서 액세스할 사용자 추가
12. 앞서 만든 role 할당
13. 버킷 선택. 디렉토리 설정 가능
14. ssh 키를 만들어 사용자에게 할당(리눅스에서 직접 만들거나 할당)
15. 리눅스에서 만들어서 sftp 서버에 할당할 필요가 있음
16. WinSCP 를 사용하여 퍼블릭 키를 윈도우 컴퓨터로 내보내여 열기
17. 키를 복사. SFTP 서버에 복사하거나 14번의 aws 콘솔로 돌아가서 ssh 퍼블릭키 입력
18. 시작
19. sftp 엔드포인트를 복사. WinSCP 또는 openSSh 등을 이용하여 파일 전송 지침 전송
20. 키를 생성한 서버에서 SFTP가 프라이빗 키를 사용하지 않는 경우 콘솔에 표시된 서버이름에 생성한 사용자 이름 사용
21. 연결 완료
22. 파일 입력하여 전송 가능
23. s3 버킷에 업로드

------------윈도우
24. puttyGen 을 이용하여 퍼블릭, 프라이빗 키페어 생성 RSA 2048
25. 키가 생성되면 이를 sftp 서버에 배치
26. 프라이빗 키를 로컬 서버에 저장
27. 퍼블릭 키를 콘솔에서 SFTP 서버에 추가
28. WinSCP 를 시작. sftp 엔드포인트가 호스트 이름
29. 유저 이름은 그대로. 암호의 기본값 Advanced
30. Authentication 에서 프라이빗 키를 선택
31. 파일 전송하면 끝


홈 디렉토리에 대한 사용자 액세스 제한을 위한 sftp 권한 범위 축소
1. iam 이동
2. policies 선택. 새로 생성
3. json 파일 편집. 홈 디렉토리에 대한 액세스 권한만 제한이 되는 정책 생성.
4. migration and transfer 에서 SFTP. 서버 선택 
5. user 에 새로 사용자 선택. 방금 생성한 정책으로 변경
6. 테스트


SFTP 사용량 모니터링
cloudWatch 로그인을 허락하는 정책 필요
SFTP와 cloudWatch 간의 신뢰 관계 구축
cloudTrail 도 똑같음. 추적을 생성해야 s3에 로그가 저장됨


실습
1. sftp 서버를 편집
2. logging role 을 추가해야 됨
3. IAM 에서 정책 생성. json 으로 로그 스트림, 로그 그룹, put 로그 이벤트를 허용
4. 역할 생성. aws 서비스, transfer 서비스 선택. 방금 만든 정책과 연결. 태깅
5. 역할 이름, 생성
6. migration and transfer 에서 sftp 선택
7. 2로 돌아가서 logging role 에 방금 만든 역할 추가
8. cloudWatch 에 로그가 생김.


요금
sftp 엔드포인트 프로비저닝 시간당 요구
송수신 gb 당 요구
추가 요금


핵심
1. 호스트 이름을 서버 엔드포인트에 연결
2. IAM 을 이용하여 s3 에 대한 허용 정책 설정
3. 사용자를 iam 에 매핑하여 사용 가능하도록 함

원활한 마이그레이션. 관리 간소화


aws transfer family
SFTP 의 확장
동일한 Amazon s3 버킷에 대한 다중 프로토콜 전송 액세스 허용
모든 aws 리전에서 사용 가능
FTP, FTPS 를 간소화, 마이그레이션
FTPS : SSL/TLS 를 사용하여 TCP/IP 를 통해 파일 전송

내부 클라이언트와 외부 클라이언트에서 사용 가능
외부 클라이언트(퍼블릭 인터넷을 사용) 에게는 ftp 가 지원되지 않음

내부 클라이언트
vpn 이나 direct connect 같은 방식으로 vpc 에 연결됨. 
외부 클라이언트
인터넷 게이트웨이에 연결됨

소스 ip 주소 권한 부여 지원
private link 지원
vpc 엔드포인트, 탄력적 ip 주소 지원

sftp : 21번 포트 개방
ftp : 21번 허용
ftp 데이터 채널에 대한 임시 포트 범위도 개방

