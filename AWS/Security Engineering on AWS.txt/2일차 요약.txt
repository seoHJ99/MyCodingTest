데이터 전송 : ACM으로부터 인증서를 발급. HTTPS 를 이용하여 암호화된 데이터 전송
데이터 저장 : KMS, CloudHSM 를 이용하여 암호화 key 를 기반으로 암호화하여 저장.
    - client측과 server 측으로 나뉨.
    - 대칭키와 비대칭키로 나뉨
    - 대칭키 : 암호화와 복호화 키가 같음. 빠름. aws 의 서버측에서 사용(봉투 암호화 추가)
    - 비대칭키 : 암호화와 복호화 키가 다름. 느림.
봉투 암호화 : 암호화 키와 암호화된 데이터를 같이 저장.

AWS KMS
CMK(Custome Master Key) 를 만들어야함. 1~2개 정도. 만들어진 마스터키는 KMS 외부로 꺼낼수 없음. 즉, 복제 불가능.
-client
    사용자는 데이터 암호화를 위해 Data Key를 요구. aws 는 암호화를 위한 Data 키와 마스터키를 이용해 암호화된 Data 키를 줌.
    암호화 작업이 끝나면 사용자가 Data key 삭제 필요.
    이후 복화화 할때는 암호화된 Data 키를 KMS 에 전달하여 복호화된 Data 키를 다시 받아와 가능.
-server
    위의 과정을 aws 저장 스토리지에서 해줌
KMS 는 암호화 api 호출 건수당 비용이 발생. 따라서 데이터 세분화 수준을 정해야 함.

서버측 암호화 유형
1. SSE-S3 : 암호화를 위한 데이터 키가 S3 에 존재. 기본값.
2. SSE-KMS : 암호화를 위한 데이터 키가 KMS 에서 관리됨
3. SSE-C : 암호화를 위한 데이터 키가 client 에게 있음

KMS 를 이용해 암호화된 데이터를 다른 리전으로 옮기면 복호화 불가능. KMS 키는 외부로 나갈수 없기 때문.
Multi-Region Key 를 사용 가능. 
KMS 는 Import 는 가능. 다른 데이터 키를 KMS 에서 관리되도록 하는 것은 가능.

CloudHSM
규정에 대한 요구사항 때문에 사용하는 KMS. 모듈만 aws 가 제공하고 관리, 제어 등은 고객이 직접.
CloudHSM 모듈을 사용자가 직접 만들어야 하며, 생존 시간만큼 비용이 발생.
KMS 와 하이브리드로 사용 가능.
여러 리전에서 백업해야 한다.

EBS 볼륨 복화화 작업은 반드시 EC2에 연결되어 있어야 가능.

Secrets Manager
민감한 정보를 암호화하여 저장하는 저장소. api 호출을 통해 데이터 조회 가능.
RDS 암호에 대한 로테이션 기능이 있음. 유료.
KMS 와 연동해서 사용 가능
리소스 기반 정책 가능.

Parameter Store 
Systems Manager 하위 기능. Secrets Manager 와 비슷.
로테이션 기능이 없음. 무료.

---------------------------------------------------------------------------

데이터 스토리지
EFS  FSx   |   EBS   Instance Store     |    S3-STD S3-IA  S3-Glacier
파일(NAS)      블록(SAN)                      오브젝트
EFS: 리눅스    EBS: 비휘발성. 가상머신에       인덱스가 없음. 보조 인덱스. DB 같은 곳에 키값을 저장해두는 방식.
                    속도가 느림.
                    스냅샷을 이용한 백업
                    Optimized : ec2가 사용하는 서비스 라인(네트워크)과 ebs 의 서비스 라인을 분리
FSx: 윈도우    IS : 휘발성. 물리적 존재
                    속도가 빠름
                    스냅샷 불가능.


EBS 의 ssd 타입 :
1. GP : 1gb 당 3IOP 제공. 용량에 따라 비용 청구.
2. IO : 용량과 성능 지정 가능.

S3의 구분
S3-STD: 백업. 데이터를 바로 조회 가능
S3-Glacier : 아카이브. 데이터 조회 시간이 필요.

S3-Interegence-Tiering : 알아서 티어링됨.
S3-OneZone-IA : 하나의 영역만 사용. 가용성이 별로.

-----------------------------------------------------------------------

Amazon Macie
S3 에 저장된 데이터에 대해 민감성과 보안에 대해 검증함
보고서에 따라 사용자가 직접 조치. 유료.
커스텀하여 식별자를 만들수도 있음.

ACL
지금은 ACL을 거의 사용 안함.
버킷 ACL 을 다른 버킷에 로그 전송 용도로 조금 사용.

S3 버킷 액세스 포인트
액세스 포인트에 정책을 부여하여 편하게 관리.

S3용 Access Analyzer
누가 특정 버킷에 어떻게 접근했는지 로그를 남겨서 분석

CRR(Cross Region Replicatoin) : 가까운 리전에 데이터 복제
    암호화된 데이터는 복호화한뒤, 새로운 리전에 저장된 키값으로 다시 암호화. 즉, 멀티 리전 키가 없어도 다른 리전에서 데이터 조회 가능
SRR(Same Region Replicatoin) : 같은 리전에 데이터 복제


S3 데이터 버전 관리
최대 버전 개수를 설정해야 함. 안하면 계속 데이터 누적.

S3 객체 잠금
Write Once Read Many(WORM) 모델
한번만 작성. 이후에 수정 불가.


--------------------------------------------
RDS보안

vpc레벨부터 보안 시작.
vpc - 격리
IAM - 접근 제어
DB - 액세스 제어

백업 
스냅샷 이용. 읽기 전용 복제본을 다른 리전에 생성 가능.


-------------------------------
DynamoDB

정책의 SecureTransfer 옵션을 통해 전송중 암호화 강제 가능
정책의 Condition 을 통해 특정 DynamoDB 테이블에 특정 아이템만 접근하거나 키에만 접근하도록 하는게 가능.

----------------------------
Amazon EBS

스냅샷을 통해 백업
MGN을 통한 서브 마이그레이션 가능.
보안그룹을 통한 접근 제어.

-----------------------
S3 Glacier

기본적으로 암호화 지원.
저장소 잠금(볼트락) 가능.

--------------------------------
네트워크 보안

AWS 의 분리 순서
1. 계정  2. VPC  3. sbunet

vpc 선택 기준
1. 레이턴시  2. 거버넌스(규정)  3. 서비스  4. 비용

Public 서브넷으로 만들기 위한 구서요소
1. 인터넷 게이트웨이
2. 라우팅 테이블 - 1:n으로 매핑 가능.
3. 퍼블릭 IP - 자동할당 또는 EIP(탄력적 ip. 고정)

NAT 게이트웨이 : Private 서브넷에서 인터넷 게이트웨이에 대한 Outbound 트래픽을 처리
    - 비용 여유에 따라 NAT 를 다중화하여 병목 현상을 피하고 고가용성을 챙길수 있다.
    - 가장 중요. 없으면 외부와의 모든 교류가 불가능.

엔드포인트 : aws 서비스만을 위한 접근 경로. Private sbunet 이 NAT 을 통하지 않고 aws 서비스를 사용하기 위한 서비스
    - 모든 서비스가 지원하는 것은 아님.
    - 인터페이스 타입 : eni 를 이용하여 접근. 기본적으로 Security Group 으로 권한 설정.
    - 게이트웨이 타입 : s3, DynamoDB 지원. 만들어서 라우팅 테이블에 추가. 리소스 기반 정책을 통해 설정.

VPC 의 보안
SG(ec2) < NACL(서브넷) < 라우팅 테이블(vpc)

Security Group(SG. 보안그룹) : 기본적으로 모든 트래픽을 거부. stateful
    - 무엇을 허용할지 설정
    - 여러 리소스간(서로 다른 서브넷일지라도) chaning 이 가능. 시큐리티 그룹을 한데 묶는것.
    - 체이닝을 통해 리소스에 대한 접근 제어가 가능
NACL : 기본적으로 허용. stateless. 순서대로 번호를 매기지 않고 10,20,50 이런 식으로 텀을 둠. 중간에 룰 추가를 위해.
    ** 만약 특정 ip 주소를 막고자 하면 NACL 이 좋다. 무엇을 거부할지 정하기에.
    - NACL 로 리소스에 대한 접근 제어를 하려고 하면 서브넷을 리소스별로 만들어야 함. 서브넷은 수정이 안되기에 신중.

피어링
여러 vpc 간에 통신.
    - ip 의 중첩이 존재하면 안됨.
    - 무조건 1:1 이다.

TransitGateway
vpc 피어링 관리형 서비스. vpn 또는 전용선 연결도 가능. TransitGateway 간의 피어링도 가능.
aws vpc Solution 을 사용하여 라우팅해줌.
도입 고려사항
1. 요금  2. vpc 의 개수

vpc 외부 연결
1. 인터넷 게이트웨이
2. 피어링
3. 엔드 포인트
4. TransitGateway에 attechment
5. vpn, 또는 전용선(DX) 를 사용하기 위한 VirtualGateway


network firewall
인터넷 게이트웨이와 서브넷 사이에 완충지대?
트래픽을 한번 더 검사함.
NACL 에 대한 영향범위를 최소화하기 위해 새로운 서브넷을 만들어 그곳에 firewall 엔드포인트를 만들수도 있음.


----------------------------------
인프라 및 edge 보호

AWS network firewall : vpc 내부에서 트래픽을 관리하는 솔루션
    - 한곳에서 인바운드/아웃바운드 모든 트래픽 관리 가능. 즉, 중앙 집중 관리.
    - acl 은 불가능한 도메인 필터링 등이 가능.
    - 여러개의 조건을 걸어 계층화 가능. 필터링 등도 가능.
Firewall Manager: 하나의 정책을 여러개의 계정에 일괄 적용 가능한 서비스.

인터페이스 VPC 엔드포인트 : PrivateLink 에서 제공됨.
PrivateLink : ENI 가 만들어짐. 

vpn, dx 로 vpc 에 접근할 시, vpc 에 연결된 인터페이스 vpc 엔드포인트에 연결 가능. 따라서 eni 에 연결된 서비스도 사용 가능.