자격증은 solutions architect 나 developer 로.
쿠버네티스에 대한 이해 필요
ai 에 대한 기본 이해 필요
파이썬 복습
aws jam - 문제해결
시험 모의고사 강의 등이 존재
Learning plans - 공부 계획
AWS Builder Labs - 실습
인터넷 : 글로벌 네트워크
웹 : 인터넷 기반의 서비스


----------------------------

1. 과정 목표
IAM 역할, 권한 구성
기존에는 3-tier(웹서버, 어플리케이션 서버, 데이터베이스 서버) 가 아닌 클라우드 네이티브 애플리케이션 설계
파이썬 기반 sdk 이용(boto3)
aws 아이콘 
    오렌지 : 컴퓨팅
    녹색 : 스토리지
    파란색 : db
정적 웹사이트 : 브라우져만으로 구동 가능한 사이트

AWS X-Ray : 모니터링(옵저버어빌리티) 서비스. 모니터링은 과거. 옵저버어빌리티는 진행하면서.
Amazon Polly : 텍스트 음성화
AWS Cloud9 : aws 에서 제공하는 ide
AWS API Gateway : 개발자가 개발하는 api 를 쉽게 다루기 위한 서비스. 연결된 마이크로 서비스에 api 를 생성해줌.
AWS Cognito : 어플리케이션 토큰 기반 인증 서비스
Provisioning : 클라우드 상에서 서비스를 준비하는 과정. 하드웨어, os, 에플리케이션 설치 등의 작업을 통틀어서 말함
HA(고가용성) : 서버가 항상 사용 가능한 성질
    - 이중화, 확장성, 장애복구, 병목현상x

------------------------------------

HTTP 메시지 구조
요청 : start line(http 메서드, uri, 프로토콜 버전), header, body
응답 : status line(http 상태코드, 프로토콜 버전), header, body


---------------------------------
YAML : json 과 같은 형식의 텍스트를 좀더 가시성이 좋게. 탭으로 구분
AWS cli : 파이썬과 aws cli 가 설치되어 있어야 사용 가능. 파라미터는 하이픈 두개 + 파라미터 이름 + 파라미터 밸류 --p.n p.v
    - 동기식으로 실행하여 대기시키고 싶으면 wait 명령어 사용
AWS Toolkit : ide 에서 aws 를 쉽게 사용할수 있게 해주는 플러그인?

-----------------------------------

aws 서비스 : 가상화된 하드웨어 + 소프트웨어를 제공하는 서비스
람다같은 서비스는 vpc 외부에 생성될수 있음. 즉, 모든 서비스가 vpc 내부에 존재하는건 아님.
ARN : 아마존 리소스를 고유하게 구별하기 위한 리소스 구분 문자열
iam : 리전단위가 아님.

리소스 단위
1. 글로벌 : IAM, 엣지 로케이션, route53 등
2. 리전 - 가용영역이 3개 이상
3. 가용 영역(az) - 데이터센터가 1개 이상

로드 밸런서 : 자동으로 도메인 이름 만들어짐.

-------------------------------------

관리형 서비스 : 람다(고가용성 알아서 보장)
    - 인스턴스 기반 : ec2 인스턴스의 EBS 볼륨을 붙여, 필요한 어플리케이션을 제공(ex: RDS). 결국 ec2 기반이니까 ec2 처럼 설정.
    - serverless 기반 : S3 등. aws 에서 알아서 관리.
비관리형 서비스 : ec2(고가용성 등의 기능을 원하면 고객이 스스로 구현)

Security Group(보안그룹) : 기본적으로 모두 차단. 인스턴스에 대한 접근을 제어.

vpc 엔드포인트 : 게이트웨이 엔드포인트를 사용하지 않고 aws 서비스에 접근하기 위해 사용 가능한 서비스. 
    인터넷 게이트웨이를 사용하지 않고 aws 서비스에 대한 접근에 대해서만 허용하는 엔드포인트.

arn 중간중간 비어서 :: 와 같이 표시되는 이유는 서비스에 따라 가용영역이 없고 계정과 상관없을 수도 있기 때문.

-----------------------------------------------

iam
policy : 권한. 정책. 인가. 어떤 리소스에 접근 가능한지. JSON으로 작성.
role : policy 를 줄 수 있음. 임시 인증. 최소 권한 원칙. 리소스에 권한 부여 가능. 중복 불가능. 하나의 역할만 가질수 있음.
user : policy 를 줄 수 있음. 영구 인증.

리소스 기반 정책
리소스에 대한 권한을 부여
모든 리소스에 권한을 부여할수 있는건 아님.
s3 같은 경우에는 public 하게 aws 계정 여부와 상관없이 모든 사람이 접근해야하는 경우가 있을수도 있음. 이를 위한 정책.

인스턴스 프로파일
ec2를 구분하고 권한을 부여하기 위한 개념


---------------------------------

Cloud9 을 이용한 개발
AWS config 명령어를 통해 .aws 내부에 access key 같은 관련 정보가 저장할수 있음. 그러나 권장x
보안 인증 정보 : 우선 순위
1. 코드 또는 cli 에서 지정
2. 환경변수
3. 보안 인증 정보 파일의 기본 보안 인증 정보 프로파일
4. 인스턴스 프로파일(권장). 인스턴스에 역할을 설정하면 자동으로 인스턴스가 프로파일, 즉 api id 값과 시크릿키를 만든다.
    - 다만 이는 Cloud9 같은 개발환경에서만 가능한 이야기이고, vscode 와 같은 환경에서는 불가능한 이야기.
4가 가장 권장됨. 따라서 1~3 이 존재하면 안됨.
Cloud9 이 아닌 환경에서는 3이 권장됨.