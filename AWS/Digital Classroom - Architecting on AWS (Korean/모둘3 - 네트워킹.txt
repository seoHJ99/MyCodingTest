ip 주소
172.31.2.15 /16  = 16번째 짜리까지 네트워크 id 인것을 말함
서브넷 마스크 개념

---------------
vpc
vpc : aws 에서 사용 가능한 사설 네트워크 환경. 하나의 리전에 속해있음.
      - 여러 가용 영역을 걸침
서브넷을 이용하여 ip 를 나눔
aws 각 서브넷에서 5개의 ip 주소를 예약함
서브넷은 가용영역 안에 있음. 따라서 서브넷의 ip 주소는 vpc 주소 안이어야 함.
서브넷이 서로 겹치면 안됨.

퍼블릭 서브넷 : 외부에서 접근 가능하도록 인터넷 게이트웨이와 연결된 서브넷
    라우팅 테이블에 인터넷 게이트웨이가 지정되어 있음. 즉, 아웃바운드 트래픽이 퍼블릭과 연결됨
프라이빗 서브넷 : 외부에서 접근 불가능한 서브넷
    라우팅 테이블에 인터넷 게이트웨이가 없음

각 리전마다 하나의 기본 vpc 가 생성됨
사용자가 전문적인 네트워크 지식이 없어도 사용할수 있도록 만들어진 vpc

-------------------------
탄력적 ip 주소 및 nat 게이트웨이

탄력적 IP 주소 : 고정된 ip 주소값. 기본적으로 리전, 계정당 5개로 제한되어 있으나 사용자가 바꿀수 있음
    - 기존에 사용하던 ip 를 그대로 사용 가능
    - eni (탄력적 네트워크 인터페이스)는 동일한 가용영역에 있기에 리소스 이동 가능
    - eni : 가상의 네트워크 카드
NAT 게이트웨이 : 사설 네트워크가 공용 ip 를 사용 가능하게 변환해줌
    - 프라이빗 네트워크는 퍼블릭 서브넷의 nat 게이트웨이를 이용해 요청함

----------------------
vpc 트래픽 보안
네트워크 acl : 서브넷 경계에서 작동
    - 기본적으로는 모든 인바운드와 아웃바운드 허용
    - 스테이트리스. 모든 인바운드와 아웃바운드를 검사
    - 허용규칙 거부규칙 둘다 지원됨
    - 규칙 순서대로 평가됨. 그중 하나를 통과하면 그냥 통과
    
보안그룹 : aws 리소스에 대한 인바운드, 아웃바운드 트래픽 제어 
    - 스테이트풀. 패킷을 요청한 대상에 나가는 것이 가능
    - 포트, ip, 프로토콜에 대해서는 작동
    - /user 로 들어오는 모든 요청을 막는 식으로는 작동하지 않음
    - 기본적으로 모든 인바운드는 차단하고 아웃바운드는 허용
    - 아웃바운드 트레픽 제한을 걸어서 최소화 가능
    - 보안그룹 연결.
    - 허용규칙만 지원됨
    - 모든 규칙을 통과해야 됨

1. 먼저 acl로 트래픽 검사
2. 이후 보안그룹으로 검사.

