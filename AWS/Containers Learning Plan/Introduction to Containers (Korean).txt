컨테이너
모든 컴퓨터 환경에서 소프트웨어를 안정적으로 실행할수 있도록 운영체제 수준에서 구현되는 가상화.
경량의 독립 실행 패키지.
에플리케이션을 실행하는데 필요한 모든것을 포함.
여러개의 컨테이너가 하나의 os 커널을 를 공유

Docker
가상화 플랫폼.
컨테이너 생성, 저장, 관리 도구.
자동화된 빌드, 테스트, 배포 파이프라인.
이동식 런타임 환경.
컨테이너를 이미지라는 불변의 단일 객체로 관리.
서로 다른 종속성을 가진 여러 어플 동시 실행 가능.

이미지
컨테이너용 템플릿.
컨테이너를 생성하는 명령이 포함되어 있는 읽기 전용 템플릿.
다른 사용자가 올린 이미지 사용 가능.
다른 이미지 기반으로 이미지 생성.
도커 파일을 변경하고 이미지를 다시 생성하면, 변경된 계층만 다시 생성.

컨테이너 : 해당 이미지의 인스턴스
이미지를 기반으로 여러 컨테이너를 만들수 있다.
컨테이너는 인스턴스화 될때 기존 이미지 위에 R/W 계층이 만들어짐. 컨테이너가 빨리 구동되는 이유.
기록 중 복사(copy on write) : 변경된 파일이 기록되는 시스템. 기본이미지 변경 없음. 이미지를 공유하면서도 자체 데이터를 가질수 있는 이유.
    장기 데이터 스토리지가 아님.

마이크로 서비스
애플리케이션의 서비스를 분리시켜 독립적으로 실행시키는 소프트웨어 아키텍쳐 설계 방식.
컨테이너와 잘 어울림.
분산되고 진화적인 설계.
효율성이 낮은 파이프. 스마트한 엔드포인트.
프로젝트가 아닌 서비스별 독립 제품.
장애 대비 설계
일회성
